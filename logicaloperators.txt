Logical operators and flow control

Comparison and Logical Operators
==    equals
>      greater than
<      less than
>=    equal to or greater than
<=    equal to or less than
&&    and 
||       or
!        not



2 == 3
2 < 3
2 <= 3
3 >= 3
"two" == 2
"two" > "three"
"a" > "b"
"b" > "a"

1 == 1 && 1 > 2
1 == 1 && 3 > 2
1 == 1 || 1 > 2
1 == 1 || 3 > 2
1 == “one” || 1 > 2


puts "What is your favorite animal?"
animal = gets.chomp
if animal == “Dog”
  print “You like dogs. Woof!”
end

puts "What is your favorite animal?"
animal = gets.chomp
if animal == “Dog”
  print “You like dogs. Woof!”
elsif animal == “Cat”
  print “You like cats. Meow!”
else 
  print "You don’t like cats or dogs? Okay.”



numbers = [1,2,3]
for element in numbers
  puts "-> #{element}"
end

While
string = ""

# While the string's length is less than 10
while string.length < 10
  # Add an 'a'
  string = string + 'a'
end

puts "The final string is #{string}"


i = 1
while i<=10 do
  print "#{i} "
  i += 1
end
# Outputs: 1 2 3 4 5 6 7 8 9 10



Iterating Arrays
#each
Arrays being lists, it's natural to want to go through each item in the list. We call this array traversal or iteration.
Let's assume we have the following array:

numbers = [ "One", 2, "Three" ]
And we want to loop through the array and do something with each of the items in the array. We can do that using the #each method:
numbers.each do |item|
  puts "--> #{item}"
end
Here, we are telling ruby to go through the array and for each item, execute the block of code (between do and end). Where it says item that’s just a variable that we are using to represent each item in the array. We can name it whatever we want.

Hashes
my_hash = {}
my_hash["AST"] = "Asturias"
my_hash["GAL"] = "Galicia"
my_hash["CAT"] = "Catalunya"

my_hash.each do |key,value|
  puts "#{key} stands for #{value}"
end


